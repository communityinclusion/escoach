<?php

/**
 * @file
 * Contains admin_can_login_anyuser.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Url;
use Drupal\Core\Session\AccountInterface;

/**
 * Implements hook_help().
 */
function admin_can_login_anyuser_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the admin_login_anyuser module.
    case 'help.page.admin_login_anyuser':
      $text = file_get_contents(__DIR__ . '/README.md');
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . Html::escape($text) . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Implements hook_entity_operation().
 */
function admin_can_login_anyuser_entity_operation(EntityInterface $entity) {
  $current_user_id = \Drupal::currentUser()->id();
  // For All user excepted admin user or current login user.
  if (in_array($entity->bundle(), ['user']) && $current_user_id != $entity->id()) {
    $operations = [];
    $operations['switch_login'] = [
      'title' => t('Login'),
      'url' => Url::fromRoute('admin_can_login_anyuser.confirm_login_switch_form', ['user' => $entity->id()]),
      'weight' => 145,
    ];
    return $operations;
  }
}

/**
 * Implements hook_page_top().
 */
function admin_can_login_anyuser_page_top(array &$page_top) {
  $tempstore_administrator = \Drupal::service('tempstore.private')->get('admin_can_login_anyuser');
  $administrator_user_id = $tempstore_administrator->get('administrator_user_id');
  if (!empty($administrator_user_id)) {
    $page_top['backlink'] = [
      '#type' => 'link',
      '#title' => t('Back to the Admin Login'),
      '#url' => Url::fromRoute('admin_can_login_anyuser.back_admin_login', ['user' => $administrator_user_id]),
      '#options' => ['attributes' => ['class' => ['admin-backlink']]],
      '#weight' => -10,
    ];
  }
}

/**
 * Implements hook_user_logout().
 */
function admin_can_login_anyuser_user_logout(AccountInterface $account) {
  $tempstore_administrator = \Drupal::service('tempstore.private')->get('admin_can_login_anyuser');
  $tempstore_administrator->delete('administrator_user_id');
}
